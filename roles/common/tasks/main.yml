- name: Set Hostname
  ansible.builtin.shell: set-hostname {{component}}

# Install Node exporter in all instances for Prometheus
- name: Install Prometheus Node Exporter
  ansible.builtin.shell: labauto prometheus-node-exporter

- name: Setup Prometheus Alerts Configuration
  ansible.builtin.template:
    src: alert.yml
    dest: /tmp/alert.yml

# Copy service alert's configuration from component server to Prometheus Server
- name: Copy Prometheus Alerts Configuration to Prometheus Server
  ansible.builtin.shell: sshpass -p {{ lookup('aws_ssm', '{{env}}.ssh.pass', region='us-east-1' ) }} scp /tmp/alert.yml {{ lookup('aws_ssm', '{{env}}.ssh.user', region='us-east-1' ) }}@172.31.13.17:/opt/prometheus/alerts/{{component}}.yml

# Reload Prometheus configuration without restarting the Prometheus service
# Add the flag --web.enable-lifecycle to the Prometheus.service file
# ExecStart=/opt/prometheus/prometheus --web.enable-lifecycle
- name: Reload Prometheus configuration without restarting Prometheus Service
  ansible.builtin.shell: curl -v -s -XPOST http://172.31.13.17:9090/-/reload

- name: Import ELK
  ansible.builtin.import_role:
    name: elk

### Grafana
- name: Make Template
  ansible.builtin.template:
    src: grafana-template.json
    dest: /tmp/grafana.json
    remote_src: yes

- name: Import Grafana dashboard
  community.grafana.grafana_dashboard:
    grafana_url: http://172.31.13.17:3000
    grafana_api_key: "{{ lookup('aws_ssm', 'grafana.api_key', region='us-east-1' ) }}"
    state: present
    overwrite: yes
    path: /tmp/grafana.json