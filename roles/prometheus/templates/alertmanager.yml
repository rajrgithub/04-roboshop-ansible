route:
  group_by: ['alertname']
  group_wait: 30s
  group_interval: 5m
  repeat_interval: 1h
  receiver: 'email'
receivers:
  - name: "email"
    email_configs:
      - to: "raj479.mits@gmail.com"
        from: "raj479.mits@gmail.com"
        smarthost: "email-smtp.us-east-1.amazonaws.com:587"
        auth_username: "{{ lookup('aws_ssm', 'ses.user', region='us-east-1' ) }}"
        auth_password: "{{ lookup('aws_ssm', 'ses.pass', region='us-east-1' ) }}"
        require_tls: true
inhibit_rules:
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'dev', 'instance']

# Email credentials are created in parameter store using aws-parameters.yml
# A user with AWS access is required to get Paramater store credentials from Prometheus Server
# "prometheus-server-ec2-role" IAM role is created to get access to ec2 instances
# Create policy to get access to AWS paramaters & attach the policy to the IAM role
# Then AWS parameters can be accessed from Prometheus server
# "prometheus-server-ec2-role" role should be added to Prometheus ec2 instance